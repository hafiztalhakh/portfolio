[{"D:\\portfolio\\src\\index.js":"1","D:\\portfolio\\src\\App.js":"2","D:\\portfolio\\src\\Layout\\Layout.js":"3","D:\\portfolio\\src\\Components\\Navbar.js":"4","D:\\portfolio\\src\\reportWebVitals.js":"5","D:\\portfolio\\src\\Components\\Navmenu.js":"6","D:\\portfolio\\src\\Components\\Footer\\Footer.js":"7","D:\\portfolio\\src\\Screens\\Home\\Home.js":"8","D:\\portfolio\\src\\Components\\Footer\\Components\\Profile.js":"9","D:\\portfolio\\src\\Portfolio\\portfolio.js":"10","D:\\portfolio\\src\\Components\\Footer\\Components\\NormalFooter.js":"11","D:\\portfolio\\src\\Screens\\Home\\Components\\Skills.js":"12","D:\\portfolio\\src\\Screens\\Home\\Components\\Experience.js":"13","D:\\portfolio\\src\\Screens\\Home\\Components\\Education.js":"14","D:\\portfolio\\src\\Screens\\Home\\Components\\Proficiency.js":"15","D:\\portfolio\\src\\Screens\\Home\\Components\\Projects.js":"16","D:\\portfolio\\src\\Screens\\Home\\Components\\GithubRepos.js":"17","D:\\portfolio\\src\\Screens\\Home\\Components\\About.js":"18","D:\\portfolio\\src\\Components\\GithubRepoCard.js":"19","D:\\portfolio\\src\\Components\\CustomisedProgress.js":"20"},{"size":609,"mtime":1640117410269,"results":"21","hashOfConfig":"22"},{"size":364,"mtime":1639983996661,"results":"23","hashOfConfig":"22"},{"size":1396,"mtime":1640117410263,"results":"24","hashOfConfig":"22"},{"size":2196,"mtime":1640117410261,"results":"25","hashOfConfig":"22"},{"size":375,"mtime":1640117410269,"results":"26","hashOfConfig":"22"},{"size":5836,"mtime":1640117410262,"results":"27","hashOfConfig":"22"},{"size":1850,"mtime":1640117410260,"results":"28","hashOfConfig":"22"},{"size":1677,"mtime":1640117410268,"results":"29","hashOfConfig":"22"},{"size":8737,"mtime":1640117410259,"results":"30","hashOfConfig":"22"},{"size":8393,"mtime":1640125563018,"results":"31","hashOfConfig":"22"},{"size":8103,"mtime":1640117410259,"results":"32","hashOfConfig":"22"},{"size":3322,"mtime":1640117410267,"results":"33","hashOfConfig":"22"},{"size":4223,"mtime":1640117410265,"results":"34","hashOfConfig":"22"},{"size":3763,"mtime":1640117410265,"results":"35","hashOfConfig":"22"},{"size":2325,"mtime":1640123234971,"results":"36","hashOfConfig":"22"},{"size":3768,"mtime":1640121522355,"results":"37","hashOfConfig":"22"},{"size":4369,"mtime":1640117410266,"results":"38","hashOfConfig":"22"},{"size":4291,"mtime":1640117410265,"results":"39","hashOfConfig":"22"},{"size":5038,"mtime":1640117410260,"results":"40","hashOfConfig":"22"},{"size":946,"mtime":1640123231787,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"53pufg",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"D:\\portfolio\\src\\index.js",[],["92","93"],"D:\\portfolio\\src\\App.js",[],"D:\\portfolio\\src\\Layout\\Layout.js",[],"D:\\portfolio\\src\\Components\\Navbar.js",[],"D:\\portfolio\\src\\reportWebVitals.js",[],"D:\\portfolio\\src\\Components\\Navmenu.js",[],"D:\\portfolio\\src\\Components\\Footer\\Footer.js",["94","95"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Container, Divider, Typography, makeStyles } from '@material-ui/core';\r\nimport axios from \"axios\";\r\n\r\nimport Profile from \"./Components/Profile\";\r\nimport FooterNormal from \"./Components/NormalFooter\";\r\n\r\nimport { openSource,customColorTheme } from \"../../Portfolio/portfolio\";\r\n\r\nconst styles = makeStyles(theme => ({\r\n    normalText: {\r\n        fontSize: 16,\r\n    },\r\n    creditDiv: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nexport default function Footer() {\r\n    const classes = styles();\r\n    const {\r\n        normalText,\r\n        creditDiv,\r\n    } = classes;\r\n\r\n    const [prof, setrepo] = useState([]);\r\n\r\n    function setProfileFunction(array) {\r\n        setrepo(array);\r\n    }\r\n    function getProfileData() {\r\n        const client = axios.get(\"https://api.github.com/users/\" + openSource.githubUserName)\r\n            .then(function (response) {\r\n                setProfileFunction(response.data);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getProfileData();\r\n    }, []);\r\n    if (openSource.showGithubProfile === \"true\") {\r\n        return (\r\n            <Fragment>\r\n                <Container maxWidth=\"lg\">\r\n                    <Profile prof={prof} />\r\n                </Container>\r\n                <Divider style={{ background: customColorTheme.primaryColor, marginTop: 20 }} />\r\n                <div className={creditDiv}>\r\n                    <Typography className={normalText} style={{ padding: 20, color: customColorTheme.primaryColor }}>\r\n                        All Rights Reserved By Talha Khalid\r\n                    </Typography>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    } else {\r\n        return (<FooterNormal />);\r\n    }\r\n}\r\n","D:\\portfolio\\src\\Screens\\Home\\Home.js",["96","97"],"import React, { Fragment, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\n//Components\r\nimport About from './Components/About';\r\nimport Skills from './Components/Skills';\r\nimport Education from './Components/Education';\r\nimport Experience from './Components/Experience';\r\nimport Proficiency from './Components/Proficiency';\r\nimport Projects from './Components/Projects';\r\nimport GithubRepo from './Components/GithubRepos';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paddingBlockTop: {\r\n        height: 50,\r\n        [theme.breakpoints.up('md')]: {\r\n            height: 0\r\n        }\r\n    },\r\n    paddingBlock: {\r\n        height: 50,\r\n        [theme.breakpoints.up('md')]: {\r\n            height: 50\r\n        }\r\n    }\r\n}));\r\n\r\nfunction Home(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const mediumScreens = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n    return (\r\n        <Fragment>\r\n            <About />\r\n            <div id=\"skills\" className={classes.paddingBlock} />\r\n            <Skills />\r\n            <div id=\"education\" className={classes.paddingBlock} />\r\n            <Education />\r\n            <div id=\"experience\" className={classes.paddingBlock} />\r\n            <Experience />\r\n            <div id=\"proficiency\" className={classes.paddingBlock} />\r\n            <Proficiency />\r\n            <div id=\"projects\" className={classes.paddingBlock} />\r\n            <GithubRepo />\r\n            <div className={classes.paddingBlock} />\r\n            <Projects />\r\n        </Fragment >\r\n    );\r\n}\r\n\r\nexport default withRouter(Home);","D:\\portfolio\\src\\Components\\Footer\\Components\\Profile.js",[],"D:\\portfolio\\src\\Portfolio\\portfolio.js",["98","99"],"D:\\portfolio\\src\\Components\\Footer\\Components\\NormalFooter.js",["100","101","102","103"],"import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Container, Divider, Grid, List, ListItem, ListItemAvatar, ListItemText, Paper, Typography } from '@material-ui/core';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { customColorTheme } from '../../../Portfolio/portfolio';\r\n\r\nimport FB from '../../../Assets/Images/Group 36.png';\r\nimport Linkedin from '../../../Assets/Images/linkedin.png';\r\nimport PhoneIcon from '../../../Assets/Images/Icon material-call.png';\r\nimport Mail from '../../../Assets/Images/Icon zocial-email.png';\r\n\r\nconst styles = theme => ({\r\n    mainDiv: {\r\n        width: \"100%\",\r\n        height: 330,\r\n\r\n    },\r\n    mainName: {\r\n        fontSize: 32,\r\n        color: customColorTheme.defaultColor,\r\n        textDecoration: 'none'\r\n    },\r\n    secondaryText: {\r\n        fontSize: 16,\r\n        color: customColorTheme.defaultColor,\r\n        fontStyle: \"italic\",\r\n    },\r\n    normalText: {\r\n        fontSize: 16,\r\n    },\r\n    socialIcon: {\r\n        width: 50,\r\n        height: 50,\r\n    },\r\n    socialIcon2: {\r\n        width: 16,\r\n        height: 16,\r\n    },\r\n    socialParent: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    creditDiv: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    contentList: {\r\n        marginTop: 0,\r\n        paddingTop: 0,\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: -30,\r\n        },\r\n    },\r\n    centerDesktop: {\r\n        display: \"flex\",\r\n        justifyContent: \"left\",\r\n        [theme.breakpoints.up('sm')]: {\r\n            justifyContent: \"center\",\r\n        },\r\n    }\r\n});\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const {\r\n            mainDiv,\r\n            mainName,\r\n            secondaryText,\r\n            normalText,\r\n            socialIcon,\r\n            socialIcon2,\r\n            socialParent,\r\n            creditDiv,\r\n            contentList,\r\n            centerDesktop,\r\n        } = classes;\r\n\r\n        return (\r\n            <>\r\n                <div className={mainDiv}>\r\n                    <Container maxWidth=\"lg\" style={{ padding: 30 }}>\r\n                        <Grid container>\r\n                            <Grid item md={4} xs={12}>\r\n                                <Grid container>\r\n                                    <Grid item xs={12}>\r\n                                        <Link className={mainName} to='/'>\r\n                                            <Typography variant=\"h6\" id=\"my-logo\" className=\"developer-name\">\r\n                                                &lt;\r\n                                                Talha Khalid\r\n                                                /&gt;\r\n                                            </Typography>\r\n                                        </Link>\r\n                                        <Typography className={secondaryText}>\r\n                                            Software Engineer\r\n                                            <br />\r\n                                            MERN Stack Developer\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} style={{ marginTop: 90, marginBottom: 20 }}>\r\n                                        <Typography className={normalText}>\r\n                                            Follow Me\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs>\r\n                                        <img src={FB} alt=\"fb\" className={socialIcon} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={4} className={centerDesktop}>\r\n                                <List className={contentList}>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Home\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Skills\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Education\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Experience\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Proficiency\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Projects\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={4} className={centerDesktop}>\r\n                                <List className={contentList}>\r\n                                    <ListItem>\r\n                                        <ListItemText>\r\n                                            Contact Me\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <img src={PhoneIcon} alt=\"phone\" />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText>\r\n                                            03362502067\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <img src={PhoneIcon} alt=\"phone\" />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText>\r\n                                            03040438807\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                    <ListItem>\r\n                                        <ListItemAvatar>\r\n                                            <img src={Mail} alt=\"mail\" />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText>\r\n                                            hafiz.talhakh@gmail.com\r\n                                        </ListItemText>\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                    <Divider style={{ background: \"#087059\" }} />\r\n                    <div className={creditDiv}>\r\n                        <Typography className={normalText} style={{ padding: 20, color: \"#087059\" }}>\r\n                            All Rights Reserved By Talha Khalid\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Footer);\r\n","D:\\portfolio\\src\\Screens\\Home\\Components\\Skills.js",[],"D:\\portfolio\\src\\Screens\\Home\\Components\\Experience.js",["104"],"import React, { useState } from 'react';\r\nimport { Container, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\n\r\nimport { customColorTheme, experience } from '../../../Portfolio/portfolio';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    sectionTitleContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 30\r\n    },\r\n    sectionTitle: {\r\n        color: customColorTheme.defaultColor,\r\n        fontSize: 36,\r\n        textAlign: 'center'\r\n    },\r\n    underline: {\r\n        backgroundColor: customColorTheme.primaryColor,\r\n        height: 5,\r\n        borderRadius: 40\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        width: 'auto',\r\n        padding: '40px 30px',\r\n        backgroundColor: customColorTheme.backgroundColor,\r\n        color: customColorTheme.defaultColor,\r\n        boxShadow: '10px 20px 30px #0000004D',\r\n        minHeight: 430\r\n    },\r\n    displayCenter: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n    },\r\n    orgImg: {\r\n        height: 100,\r\n        width: 100,\r\n        // borderRadius: 50,\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: 80,\r\n            width: 80,\r\n        }\r\n    },\r\n    jobTitle: {\r\n        fontSize: 30,\r\n        fontWeight: 'normal'\r\n    },\r\n    occupationTitle: {\r\n        color: customColorTheme.primaryColor,\r\n        fontSize: 20,\r\n        margin: \"20px 0\",\r\n    },\r\n    experienceDate: {\r\n        color: customColorTheme.defaultColor,\r\n        fontSize: 16,\r\n        margin: \"20px 0\"\r\n    },\r\n    text: {\r\n        color: '#9F9F9F',\r\n        textAlign: 'center',\r\n        fontSize: 16,\r\n\r\n    },\r\n}));\r\n\r\nexport default function Experience() {\r\n    const classes = styles();\r\n    const {\r\n        sectionTitleContainer,\r\n        sectionTitle,\r\n        underline,\r\n        paper,\r\n        orgImg,\r\n        displayCenter,\r\n        jobTitle,\r\n        occupationTitle,\r\n        experienceDate,\r\n        text\r\n    } = classes;\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <div className={sectionTitleContainer}>\r\n                <h1 className={sectionTitle}>\r\n                    Experience\r\n                <div className={underline} />\r\n                </h1>\r\n            </div>\r\n            <Grid container spacing={3}>\r\n                {\r\n                    experience && experience.length &&\r\n                    experience.map((el, i) => (\r\n                        <Grid item sm={12} md={6}>\r\n                            <Paper elevation={3} className={paper}>\r\n                                <div className={displayCenter}>\r\n                                    <img src={el.img} alt={el.experienceName} className={orgImg} />\r\n                                </div>\r\n                                <div className={displayCenter}>\r\n                                    <h4 className={jobTitle}>\r\n                                        {el.experienceName}\r\n                                    </h4>\r\n                                </div>\r\n                                <div className={displayCenter}>\r\n                                    <Typography className={occupationTitle}>\r\n                                        {el.experienceOccup}\r\n                                    </Typography>\r\n                                </div>\r\n                                <div className={displayCenter}>\r\n                                    <Typography className={experienceDate}>\r\n                                        {el.experienceDate}\r\n                                    </Typography>\r\n                                </div>\r\n                                <div className={displayCenter}>\r\n                                    <Typography className={text}>\r\n                                        {el.experienceDetails}\r\n                                    </Typography>\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","D:\\portfolio\\src\\Screens\\Home\\Components\\Education.js",["105"],"import React, { useState } from 'react';\r\nimport { Container, Grid, makeStyles, Paper } from '@material-ui/core';\r\nimport { Fade } from \"react-reveal\";\r\n\r\nimport { customColorTheme, education } from '../../../Portfolio/portfolio';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    sectionTitleContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 30\r\n    },\r\n    sectionTitle: {\r\n        color: customColorTheme.defaultColor,\r\n        fontSize: 36,\r\n        textAlign: 'center'\r\n    },\r\n    underline: {\r\n        backgroundColor: customColorTheme.primaryColor,\r\n        height: 5,\r\n        borderRadius: 40\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        width: 'auto',\r\n        padding: 20,\r\n        backgroundColor: customColorTheme.backgroundColor,\r\n        color: customColorTheme.defaultColor,\r\n        boxShadow: '10px 20px 30px #0000004D',\r\n\r\n    },\r\n    eduLogo: {\r\n        height: 100,\r\n        width: 100,\r\n        borderRadius: 50,\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: 80,\r\n            width: 80,\r\n        }\r\n    },\r\n    instituteStyle: {\r\n        color: customColorTheme.primaryColor,\r\n        fontSize: 22,\r\n        marginTop: 0,\r\n        marginBottom: 10,\r\n        fontWeight: 'normal'\r\n    },\r\n    infoDegree: {\r\n        color: customColorTheme.defaultColor,\r\n        fontSize: 16,\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n    },\r\n    text: {\r\n        color: '#9F9F9F',\r\n        textAlign: 'left',\r\n        fontSize: 12,\r\n\r\n    },\r\n}));\r\n\r\nexport default function Education() {\r\n    const classes = styles();\r\n    const {\r\n        sectionTitleContainer,\r\n        sectionTitle,\r\n        underline,\r\n        paper,\r\n        eduLogo,\r\n        instituteStyle,\r\n        infoDegree,\r\n        text\r\n    } = classes;\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <div className={sectionTitleContainer}>\r\n                <h1 className={sectionTitle}>\r\n                    Education\r\n                <div className={underline} />\r\n                </h1>\r\n            </div>\r\n            <Fade bottom duration={1000} distance=\"100px\">\r\n                <Grid container spacing={3}>\r\n                    {\r\n                        education && education.length &&\r\n                        education.map((el, i) => (\r\n                            <Grid item sm={12} md={6}>\r\n                                <Paper elevation={3} className={paper}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={4} sm={3}>\r\n                                            <img\r\n                                                src={el.img}\r\n                                                alt={`institute-pic${i}`}\r\n                                                className={eduLogo}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} sm={9}>\r\n                                            <h4 className={instituteStyle}>{el.institute}</h4>\r\n                                            <p className={infoDegree}>{el.degree}</p>\r\n                                            <p className={infoDegree}>{el.duration}</p>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <p className={text}>{el.description}</p>\r\n                                </Paper>\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </Fade>\r\n        </Container>\r\n    )\r\n}\r\n","D:\\portfolio\\src\\Screens\\Home\\Components\\Proficiency.js",[],"D:\\portfolio\\src\\Screens\\Home\\Components\\Projects.js",["106","107","108","109","110","111"],"import React, { useState } from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Chip, Container, Grid, Paper, Typography } from '@material-ui/core';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\n\r\nimport { customColorTheme, projects } from '../../../Portfolio/portfolio';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    sectionTitleContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 30\r\n    },\r\n    sectionTitle: {\r\n        color: customColorTheme.defaultColor,\r\n        fontSize: 36,\r\n        textAlign: 'center'\r\n    },\r\n    underline: {\r\n        backgroundColor: customColorTheme.primaryColor,\r\n        height: 5,\r\n        borderRadius: 40\r\n    },\r\n    paper: {\r\n        position: \"relative\",\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        width: 'auto',\r\n        padding: '20px 20px',\r\n        backgroundColor: customColorTheme.backgroundColor,\r\n        color: customColorTheme.defaultColor,\r\n        boxShadow: '10px 20px 30px #0000004D',\r\n        \"&:hover\": {\r\n            \"& .show\": {\r\n                display: \"flex\"\r\n            }\r\n        }\r\n    },\r\n    displayCenter: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        height: \"auto\",\r\n        // borderRadius: 15,\r\n    },\r\n    description: {\r\n        backgroundColor: \"#0A0A0A\",\r\n        fontSize: 16,\r\n        color: customColorTheme.defaultColor,\r\n        textAlign: \"center\",\r\n        paddingTop: 20,\r\n    },\r\n\r\n    hidden: {\r\n        display: \"none\",\r\n        zIndex: 9999,\r\n        position: \"absolute\",\r\n        // top: 100,\r\n        backgroundColor: \"#171717d1\",\r\n        height: \"92%\",\r\n        width: \"100%\"\r\n    }\r\n})\r\n);\r\n\r\nconst responsive = {\r\n    0: { items: 1 },\r\n    568: { items: 2 },\r\n    1024: { items: 3 },\r\n}\r\n\r\nexport default function Projects() {\r\n    const classes = useStyles();\r\n    const {\r\n        paper,\r\n        sectionTitleContainer,\r\n        sectionTitle,\r\n        underline,\r\n        displayCenter,\r\n        image,\r\n        hidden,\r\n        text\r\n    } = classes;\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{ marginTop: 60 }}>\r\n            <div className={sectionTitleContainer}>\r\n                <h1 className={sectionTitle}>\r\n                    Projects\r\n                    <div className={underline} />\r\n                </h1>\r\n            </div>\r\n            <Grid container spacing={3}>\r\n                {\r\n                    projects && projects.length &&\r\n                    projects.map((el, i) => (\r\n                        <Grid item key={i} xs={12} sm={6} md={4}>\r\n                            <Paper elevation={3} className={paper}>\r\n                                <div className={displayCenter}>\r\n                                    <img src={el.img} alt={el.workName} className={image} />\r\n                                </div>\r\n                                <div className={`${displayCenter} ${hidden} show`}>\r\n                                    <h4>{el.workName}</h4>\r\n                                    {/* <Chip label={el.workName} style={{\r\n                                        backgroundColor: customColorTheme.backgroundColor,\r\n                                        color: customColorTheme.defaultColor\r\n                                    }} /> */}\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n","D:\\portfolio\\src\\Screens\\Home\\Components\\GithubRepos.js",["112"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Grid, makeStyles } from '@material-ui/core';\r\nimport { Fade } from \"react-reveal\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nimport { customColorTheme } from '../../../Portfolio/portfolio';\r\n\r\nimport GithubRepoCard from \"../../../Components/GithubRepoCard\";\r\nimport { openSource, socialMediaLinks } from \"../../../Portfolio/portfolio\";\r\n\r\nconst styles = makeStyles(theme => ({\r\n    sectionTitleContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginBottom: 30\r\n    },\r\n    sectionTitle: {\r\n        color: customColorTheme.defaultColor,\r\n        fontSize: 36,\r\n        textAlign: 'center'\r\n    },\r\n    underline: {\r\n        backgroundColor: customColorTheme.primaryColor,\r\n        height: 5,\r\n        borderRadius: 40\r\n    },\r\n    displayCenter: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n    },\r\n    btn: {\r\n        backgroundImage: `linear-gradient(90deg, rgb(2, 0, 36) 0%, ${customColorTheme.primaryColor} 0%, rgb(94 34 3 / 100%) 100%)`,\r\n        color: customColorTheme.defaultColor,\r\n        width: 180,\r\n        padding: '15px 30px',\r\n        marginTop: 50,\r\n        textDecoration: 'none',\r\n        textTransform: 'uppercase',\r\n        borderRadius: 4,\r\n        textAlign: 'center',\r\n        fontWeight: 'normal'\r\n    }\r\n}));\r\n\r\nexport default function Projects() {\r\n    const classes = styles();\r\n    const {\r\n        sectionTitleContainer,\r\n        sectionTitle,\r\n        underline,\r\n        displayCenter,\r\n        btn\r\n    } = classes;\r\n    const [repo, setrepo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getRepoData();\r\n\r\n    }, []);\r\n\r\n    const getRepoData = () => {\r\n\r\n        const client = new ApolloClient({\r\n            uri: \"https://api.github.com/graphql\",\r\n            request: (operation) => {\r\n                operation.setContext({\r\n                    headers: {\r\n                        authorization: `Bearer ${openSource.githubConvertedToken}`,\r\n                    },\r\n                });\r\n            },\r\n        });\r\n\r\n        client\r\n            .query({\r\n                query: gql`\r\n        {\r\n        user(login: \"${openSource.githubUserName}\") {\r\n          pinnedItems(first: 6, types: [REPOSITORY]) {\r\n            totalCount\r\n            edges {\r\n              node {\r\n                ... on Repository {\r\n                  name\r\n                  description\r\n                  forkCount\r\n                  stargazers {\r\n                    totalCount\r\n                  }\r\n                  url\r\n                  id\r\n                  diskUsage\r\n                  primaryLanguage {\r\n                    name\r\n                    color\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n        `,\r\n            })\r\n            .then((result) => {\r\n                setrepoFunction(result.data.user.pinnedItems.edges);\r\n                // console.log(result);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    function setrepoFunction(array) {\r\n        setrepo(array);\r\n    }\r\n\r\n    return (\r\n        <Fade bottom duration={1000} distance=\"20px\">\r\n            <Container maxWidth=\"lg\">\r\n                <div className={sectionTitleContainer}>\r\n                    <h1 className={sectionTitle}>\r\n                        Open Source Projects\r\n                            <div className={underline} />\r\n                    </h1>\r\n                </div>\r\n                <Grid container spacing={3}>\r\n                    {repo.map((repo, i) => (\r\n                        <Grid item xs={12} sm={6}>\r\n                            <GithubRepoCard repo={repo} key={repo.node.id} />\r\n                        </Grid>\r\n                    ))\r\n                    }\r\n                </Grid>\r\n                <div className={displayCenter}>\r\n                    <a\r\n                        href={socialMediaLinks.github}\r\n                        target=\"blank\"\r\n                        className={btn}\r\n                    >\r\n                        More Projects\r\n                    </a>\r\n                </div>\r\n            </Container>\r\n        </Fade>\r\n    );\r\n}\r\n","D:\\portfolio\\src\\Screens\\Home\\Components\\About.js",[],"D:\\portfolio\\src\\Components\\GithubRepoCard.js",["113","114"],"import React from \"react\";\r\nimport { makeStyles, Paper } from '@material-ui/core';\r\nimport { Fade } from \"react-reveal\";\r\nimport { GoRepo } from 'react-icons/go'\r\n\r\nimport {customColorTheme} from '../Portfolio/portfolio';\r\n\r\nconst styles = makeStyles(theme => ({\r\n    paper: {\r\n        height: 'auto',\r\n        width: 'auto',\r\n        padding: '40px 30px',\r\n        backgroundColor: customColorTheme.backgroundColor,\r\n        color: customColorTheme.defaultColor,\r\n        boxShadow: '10px 20px 30px #0000004D',\r\n        minHeight: 160,\r\n        cursor: 'pointer',\r\n    },\r\n    repoNameContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    repoName: {\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        color: customColorTheme.primaryColor,\r\n        marginBottom: '0.75rem',\r\n        fontSize: 25,\r\n        fontWeight: '700',\r\n        letterSpacing: -0.5,\r\n        overflow: 'hidden',\r\n        margin: 0,\r\n        textAlign: 'left'\r\n    },\r\n    repoDescription: {\r\n        overflow: 'hidden',\r\n        display: '-webkit-box',\r\n        webkitLineClamp: '2',\r\n        webkitBoxOrient: 'vertical',\r\n    },\r\n    repoStats: {\r\n        display: 'flex',\r\n        webkitBoxPack: 'justify',\r\n        justifyContent: 'space-between',\r\n        fontSize: 13,\r\n        color: 'rgb(106, 115, 125)',\r\n    },\r\n    repoLeftStat: {\r\n        webkitBoxFlex: 1,\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n    },\r\n    langaugeColor: {\r\n        width: 10,\r\n        height: 10,\r\n        backgroundColor: 'blue',\r\n        marginRight: '0.25rem',\r\n        borderRadius: '100%',\r\n    },\r\n    repoStatChild: {\r\n        display: 'flex',\r\n        webkitboxAlign: 'center',\r\n        alignItems: 'center',\r\n        marginRight: '0.75rem',\r\n    },\r\n    repoSvg: {\r\n        marginRight: ' 0.5rem',\r\n        minWidth: 16,\r\n        color: customColorTheme.defaultColor\r\n    },\r\n    repoStarSvg: {\r\n        marginRight: ' 0.3rem'\r\n    }\r\n}));\r\n\r\nexport default function GithubRepoCard({ repo }) {\r\n    const classes = styles();\r\n    const {\r\n        paper,\r\n        repoNameContainer,\r\n        repoName,\r\n        repoDescription,\r\n        repoStats,\r\n        repoLeftStat,\r\n        langaugeColor,\r\n        repoStatChild,\r\n        repoSvg,\r\n        repoStarSvg\r\n    } = classes;\r\n\r\n    function openRepoinNewTab(url) {\r\n        var win = window.open(url, \"_blank\");\r\n        win.focus();\r\n    }\r\n\r\n    return (\r\n        <Fade bottom duration={1000} distance=\"20px\">\r\n            <Paper elevation={3} className={paper} key={repo.node.id} onClick={() => openRepoinNewTab(repo.node.url)}>\r\n                <div className={repoNameContainer}>\r\n                    <GoRepo className={repoSvg} />\r\n                    <p className={repoName}>{repo.node.name}</p>\r\n                </div>\r\n                <p className={repoDescription}>{repo.node.description}</p>\r\n                <div className={repoStats}>\r\n                    <div className={repoLeftStat}>\r\n                        <span className={repoStatChild}>\r\n                            <div className={langaugeColor} style={{ backgroundColor: repo.node.primaryLanguage.color }}></div>\r\n                            <p>{repo.node.primaryLanguage.name}</p>\r\n                        </span>\r\n                        <span className={repoStatChild}>\r\n                            <svg aria-hidden=\"true\" className=\"octicon\" height=\"16\" role=\"img\" viewBox=\"0 0 10 16\" width=\"10\" fill=\"rgb(106, 115, 125)\" className={repoStarSvg}>\r\n                                <path\r\n                                    fill-rule=\"evenodd\"\r\n                                    d=\"M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"\r\n                                ></path>\r\n                            </svg>\r\n                            <p>{repo.node.forkCount}</p>\r\n                        </span>\r\n                        <span className={repoStatChild}>\r\n                            <svg aria-hidden=\"true\" className=\"octicon\" height=\"16\" role=\"img\" viewBox=\"0 0 14 16\" width=\"14\" fill=\"rgb(106, 115, 125)\" className={repoStarSvg}>\r\n                                <path fill-rule=\"evenodd\" d=\"M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z\"></path>\r\n                            </svg>\r\n                            <p>{repo.node.stargazers.totalCount}</p>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"repo-right-stat\">\r\n                        <p>{repo.node.diskUsage} KB</p>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </Fade>\r\n    );\r\n}\r\n","D:\\portfolio\\src\\Components\\CustomisedProgress.js",[],["115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":35,"column":15,"nodeType":"123","messageId":"124","endLine":35,"endColumn":21},{"ruleId":"125","severity":1,"message":"126","line":42,"column":8,"nodeType":"127","endLine":42,"endColumn":10,"suggestions":"128"},{"ruleId":"121","severity":1,"message":"129","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"130","line":32,"column":11,"nodeType":"123","messageId":"124","endLine":32,"endColumn":24},{"ruleId":"121","severity":1,"message":"131","line":14,"column":8,"nodeType":"123","messageId":"124","endLine":14,"endColumn":14},{"ruleId":"121","severity":1,"message":"132","line":18,"column":8,"nodeType":"123","messageId":"124","endLine":18,"endColumn":19},{"ruleId":"121","severity":1,"message":"133","line":3,"column":82,"nodeType":"123","messageId":"124","endLine":3,"endColumn":87},{"ruleId":"121","severity":1,"message":"134","line":10,"column":8,"nodeType":"123","messageId":"124","endLine":10,"endColumn":16},{"ruleId":"121","severity":1,"message":"135","line":77,"column":13,"nodeType":"123","messageId":"124","endLine":77,"endColumn":24},{"ruleId":"121","severity":1,"message":"136","line":78,"column":13,"nodeType":"123","messageId":"124","endLine":78,"endColumn":25},{"ruleId":"121","severity":1,"message":"137","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"137","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"137","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"138","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"139","line":3,"column":40,"nodeType":"123","messageId":"124","endLine":3,"endColumn":50},{"ruleId":"121","severity":1,"message":"140","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":21},{"ruleId":"121","severity":1,"message":"141","line":74,"column":7,"nodeType":"123","messageId":"124","endLine":74,"endColumn":17},{"ruleId":"121","severity":1,"message":"142","line":90,"column":9,"nodeType":"123","messageId":"124","endLine":90,"endColumn":13},{"ruleId":"125","severity":1,"message":"143","line":63,"column":8,"nodeType":"127","endLine":63,"endColumn":10,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":111,"column":153,"nodeType":"147","endLine":111,"endColumn":176},{"ruleId":"145","severity":1,"message":"146","line":120,"column":153,"nodeType":"147","endLine":120,"endColumn":176},{"ruleId":"117","replacedBy":"148"},{"ruleId":"119","replacedBy":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'client' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProfileData'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'useEffect' is defined but never used.","'mediumScreens' is assigned a value but never used.","'KULogo' is defined but never used.","'Freelancing' is defined but never used.","'Paper' is defined but never used.","'Linkedin' is defined but never used.","'socialIcon2' is assigned a value but never used.","'socialParent' is assigned a value but never used.","'useState' is defined but never used.","'Chip' is defined but never used.","'Typography' is defined but never used.","'AliceCarousel' is defined but never used.","'responsive' is assigned a value but never used.","'text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getRepoData'. Either include it or remove the dependency array.",["153"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["150"],["151"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [getProfileData]",{"range":"158","text":"159"},"Update the dependencies array to be: [getRepoData]",{"range":"160","text":"161"},[1153,1155],"[getProfileData]",[1802,1804],"[getRepoData]"]